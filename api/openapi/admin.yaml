openapi: 3.0.3
info:
  title: 2FAS Admin API
  version: 0.0.1

servers:
  - url: https://admin.api.2fas.com/

paths:
  /system/fake_error:
    get:
      summary: Simulate application error (admin only)
      tags:
        - system
      responses:
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/fake_warning:
    get:
      summary: Simulate warning message during runtime (admin only)
      tags:
        - system
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /system/info:
    get:
      summary: Get system configuration (admin only)
      tags:
        - system
      responses:
        '200':
          $ref: '#/components/responses/SystemInfo'

  /mobile/web_services/{serviceId}:
    put:
      summary: Update web service.
      tags:
        - mobile
      parameters:
        - name: serviceId
          in: path
          required: true
          description: Web service ID.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebServicePayload'
      responses:
        '200':
          $ref: '#/components/responses/WebServiceResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      summary: Delete web service.
      tags:
        - mobile
      parameters:
        - name: serviceId
          in: path
          required: true
          description: Web service ID.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '404':
          $ref: '#/components/responses/NotFoundError'
    get:
      summary: Get Web Service.
      tags:
        - mobile
      parameters:
        - name: serviceId
          in: path
          required: true
          description: Web service ID.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/WebServiceResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /mobile/web_services:
    post:
      summary: Create web service.
      description: Adding service with already occupied name cause 409 response.
      tags:
        - mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebServicePayload'
      responses:
        '200':
          $ref: '#/components/responses/WebServiceResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '409':
          $ref: '#/components/responses/ConflictError'

  /mobile/icons/collections:
    post:
      summary: Create icons collection.
      tags:
        - mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IconsCollectionPayload'
      responses:
        '200':
          $ref: '#/components/responses/IconsCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /mobile/icons/collections/{collectionId}:
    put:
      summary: Update icons colletion.
      tags:
        - mobile
      parameters:
        - name: collectionId
          in: path
          required: true
          description: Icons collection ID.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IconsCollectionPayload'
      responses:
        '200':
          $ref: '#/components/responses/IconsCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      summary: Delete icons collection.
      tags:
        - mobile
      parameters:
        - name: collectionId
          in: path
          required: true
          description: Web service ID.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /mobile/icons/requests/{iconRequestId}:
    get:
      summary: Get icon request.
      tags:
        - icon_requests
      parameters:
        - name: iconRequestId
          in: path
          required: true
          description: Icon request ID.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/IconRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      summary: Delete icon request.
      tags:
        - icon_requests
      parameters:
        - name: iconRequestId
          in: path
          required: true
          description: Icon request ID.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /mobile/icons/requests/{iconRequestId}/commands/update_web_service:
    post:
      summary: Update web service according to icon request data.
      tags:
        - icon_requests
      parameters:
        - name: iconRequestId
          in: path
          required: true
          description: Icon request ID.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IconRequestUpdateWebServicePayload'
      responses:
        '200':
          $ref: '#/components/responses/WebServiceResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /mobile/icons/requests/{iconRequestId}/commands/transform_to_web_service:
    post:
      summary: Transform icon request into web service.
      tags:
        - icon_requests
      parameters:
        - name: iconRequestId
          in: path
          required: true
          description: Icon request ID.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/WebServiceResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /mobile/icons:
    post:
      summary: Create icon.
      tags:
        - mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IconPayload'
      responses:
        '200':
          $ref: '#/components/responses/IconResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /mobile/icons/{iconId}:
    put:
      summary: Update icon.
      tags:
        - mobile
      parameters:
        - name: iconId
          in: path
          required: true
          description: Icon ID.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IconPayload'
      responses:
        '200':
          $ref: '#/components/responses/IconResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      summary: Delete icon.
      tags:
        - mobile
      parameters:
        - name: iconId
          in: path
          required: true
          description: Icon ID.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /mobile/notifications:
    post:
      summary: Create notification for mobile devices.
      tags:
        - mobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileNotification'
      responses:
        '200':
          $ref: '#/components/responses/MobileNotificationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /mobile/notifications/{notificationId}:
    put:
      summary: Update notification for mobile devices.
      tags:
        - mobile
      parameters:
        - name: notificationId
          in: path
          required: true
          description: The ID of notification.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileNotification'
      responses:
        '200':
          $ref: '#/components/responses/MobileNotificationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'

    delete:
      summary: Delete notification.
      tags:
        - mobile
      parameters:
        - name: notificationId
          in: path
          required: true
          description: The ID of notification.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/Success'

  /mobile/notifications/{notificationId}/commands/publish:
    post:
      summary: Publish notification.
      tags:
        - mobile
      parameters:
        - name: notificationId
          in: path
          required: true
          description: The ID of notification.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          $ref: '#/components/responses/MobileNotificationResponse'

components:
  schemas:
    Entity:
      properties:
        id:
          type: string
          format: uuid

    MetaData:
      properties:
        created_at:
          type: string
          format: date-time
          description: Creation time.
        updated_at:
          type: string
          format: date-time
          description: Update time.

    WebServices:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Entity'
          - $ref: '#/components/schemas/WebService'

    WebService:
      properties:
        name:
          type: string
          description: Web service name.
        description:
          type: string
          description: Web service description.
        issuers:
          type: array
          items:
            format: string
          description: Web service possible issuers.
        tags:
          type: array
          items:
            format: string
          description: Additional web service description tags.
        icons_collections:
          type: array
          items:
            format: string
          description: Pinned icons collections IDs.
        match_rules:
          type: array
          items:
            $ref: '#/components/schemas/WebServiceMatchRule'
        created_at:
          type: string
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          format: date-time
          description: Creation date.

    WebServiceMatchRule:
      properties:
        field:
          type: string
          enum:
            - issuer
            - label
            - account
        text:
          type: string
          example: "@facebook.com"
        matcher:
          type: string
          enum:
            - contains
            - starts_with
            - ends_with
            - equals
            - regex
        ignore_case:
          type: boolean
          default: true

    WebServicePayload:
      properties:
        name:
          type: string
          description: Web service name.
        description:
          type: string
          description: Web service description.
        issuers:
          type: array
          items:
            format: string
          description: Web service possible issuers.
        tags:
          type: array
          items:
            format: string
          description: Additional web service description tags.
        icons_collections:
          type: array
          items:
            format: string
          description: Pinned icons collections IDs.
        match_rules:
          type: array
          items:
            $ref: '#/components/schemas/WebServiceMatchRule'

    IconsCollections:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Entity'
          - $ref: '#/components/schemas/IconsCollection'

    IconsCollection:
      properties:
        name:
          type: string
          description: Web service name.
        description:
          type: string
          description: Web service description.
        icons:
          type: array
          items:
            format: string
          description: Pinned icons IDs.
        created_at:
          type: string
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          format: date-time
          description: Creation date.

    IconsCollectionPayload:
      properties:
        name:
          type: string
          description: Web service name.
        description:
          type: string
          description: Web service description.
        icons:
          type: array
          items:
            format: string
          description: Icons IDs.

    Icons:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Entity'
          - $ref: '#/components/schemas/Icon'

    Icon:
      properties:
        name:
          type: string
          description: Web service name.
        url:
          type: string
          description: Icon AWS s3 location.
        type:
          type: string
          enum:
            - light
            - dark
          description: Icon type for darkmode and lighmode.
        width:
          type: integer
          description: Icon width.
        height:
          type: integer
          description: Icon height.
        created_at:
          type: string
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          format: date-time
          description: Creation date.

    IconPayload:
      properties:
        name:
          type: string
          description: Web service name.
        icon:
          type: string
          description: Base64 encoded PNG image file.
        type:
          type: string
          enum:
            - light
            - dark
          description: Icon type for darkmode and lighmode.

    IconsRequests:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Entity'
          - $ref: '#/components/schemas/IconRequest'

    IconRequest:
      properties:
        caller_id:
          type: string
          description: Some caller identifier
        service_name:
          type: string
          description: Web service name.
        issuers:
          type: array
          items:
            format: string
          description: Web service possible issuers.
        description:
          type: string
          description: Request description.
        light_icon_url:
          type: string
          description: Base64 encoded PNG image file.
        dark_icon_url:
          type: string
          description: Base64 encoded PNG image file.
        created_at:
          type: string
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          format: date-time
          description: Creation date.

    IconRequestPayload:
      properties:
        caller_id:
          type: string
          description: Some caller identifier
        service_name:
          type: string
          description: Web service name.
        issuers:
          type: array
          items:
            format: string
          description: Web service possible issuers.
        description:
          type: string
          description: Request description.
        light_icon:
          type: string
          description: Base64 encoded PNG image file.
        dark_icon:
          type: string
          description: Base64 encoded PNG image file.

    IconRequestUpdateWebServicePayload:
      properties:
        web_service_id:
          type: string
          description: Web service id.

    DebugLogsAuditCollection:
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/Entity'
          - $ref: '#/components/schemas/DebugLogsAudit'

    DebugLogsAudit:
      properties:
        username:
          type: string
          description: Mobile app username.
        description:
          type: string
          description: Problem description.
        file:
          type: string
          description: Problem description.
        expire_at:
          type: string
          format: date-time
          description: Expiration date.
        created_at:
          type: string
          format: date-time
          description: Creation date.
        updated_at:
          type: string
          format: date-time
          description: Creation date.

    DebugLogsAuditClaimPayload:
      properties:
        username:
          type: string
          description: Mobile app username.
        description:
          type: string
          description: Problem description.

    DebugLogsAuditPayload:
      properties:
        file:
          type: string
          description: Problem description.

    MobileNotification:
      properties:
        icon:
          type: string
          enum:
            - updates
            - news
            - features
            - youtube
          description: Notification icon (category).
        link:
          type: string
          description: 2fas.com subpage with more detailed description.
        message:
          type: string
          description: Notification message.
        published_at:
          type: string
          format: date-time
          description: Date of publishing.
        platform:
          type: string
          enum:
            - ios
            - android
            - huawei
        version:
          type: string
          description: Platform version (semantic version format).
        created_at:
          type: string
          format: date-time
          description: Creation date.

    DeviceAndExtensionHaveBeenPaired:
      properties:
        extension_id:
          type: string
        extension_name:
          type: string
        extension_public_key:
          type: string

    AlreadyRegisteredBrowserExtension:
      properties:
        id:
          type: integer
        name:
          type: string
        browser_name:
          type: string
        browser_version:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    BrowserExtension:
      properties:
        id:
          type: integer
        name:
          type: string
        browser_name:
          type: string
        browser_version:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        paired_at:
          type: string

    BrowserExtensionDevice:
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        paired_at:
          type: string
          format: date-time

    BrowserExtension2FaRequest:
      properties:
        extension_id:
          type: string
          format: uuid
        token_request_id:
          type: string
          format: uuid
        domain:
          type: string
        status:
          type: string
          enum:
            - pending
            - completed
        created_at:
          type: string
          format: date-time

    ApiError:
      type: object
      properties:
        code:
          type: integer
        type:
          type: string
        description:
          type: string
        reason:
          type: string

  responses:
    Success:
      description: Standard response for successful HTTP requests.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              type:
                type: string
              description:
                type: string
              message:
                type: string

    BadRequestError:
      description: The server cannot or will not process the request, (e.g., malformed request syntax, size too large etc)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    ConflictError:
      description: The request could not be completed due to a conflict with the current state of the target resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    NotFoundError:
      description: The requested resource could not be found but may be available in the future. Subsequent requests by the client are permissible.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    GoneError:
      description: The requested resource is no longer available.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    InternalServerError:
      description: Unexpected condition was encountered.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    MobileDevice:
      description: Registered mobile device.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              platform:
                type: string
                enum:
                  - ios
                  - android
                  - huawei
              created_at:
                type: string
              updated_at:
                type: string

    SystemInfo:
      description: System configuration
      content:
        application/json:
          schema:
            properties:
              environment:
                type: object
                description: System environment variables.
              configuration:
                type: object
                description: Application configuration.

    BrowserExtension2FaRequest:
      description: Browser extension 2FA token request (return only PENDING and no older than 2-3 minutes).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrowserExtension2FaRequest'

    PairingResponse:
      description: Mobile device and extension have been paired.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeviceAndExtensionHaveBeenPaired'

    MobileNotificationsCollectionResponse:
      description: Mobile notifications collection.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MobileNotification'

    MobileNotificationResponse:
      description: Mobile device and extension have been paired.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/MobileNotification'
              - $ref: '#/components/schemas/MetaData'

    BrowserExtensionsCollectionResponse:
      description: Browser extensions collection.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BrowserExtension'

    BrowserExtensionsPairedDevicesCollectionResponse:
      description: Mobile devices paired with browser extension.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BrowserExtensionDevice'

    BrowserExtension2FaRequestsCollectionResponse:
      description: Current (not older than few minutes) browser extension 2fa requests.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BrowserExtension2FaRequest'

    WebServiceResponse:
      description: Web service.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebService"

    WebServicesCollectionResponse:
      description: Web services.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Entity'
              - $ref: '#/components/schemas/WebServices'

    IconsCollectionResponse:
      description: Icons collection.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IconsCollection"

    IconsCollectionsResponse:
      description: Icons collections.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Entity'
              - $ref: '#/components/schemas/IconsCollections'

    IconResponse:
      description: Icon.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Icon"

    IconsResponse:
      description: Icons.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Entity'
              - $ref: '#/components/schemas/Icons'

    IconRequestResponse:
      description: Icon request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IconRequest"

    IconsRequestsResponse:
      description: Icons requests.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Entity'
              - $ref: '#/components/schemas/IconsRequests'

    DebugLogsAuditClaimResponse:
      description: Debug logs audit claim.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DebugLogsAudit"

    DebugLogsAuditResponse:
      description: Debug logs audit.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DebugLogsAudit"

    DebugLogsAuditCollectionResponse:
      description: Icons.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Entity'
              - $ref: '#/components/schemas/DebugLogsAuditCollection'
